using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Builder;
using Microsoft.AspNetCore.Hosting;
using Microsoft.AspNetCore.Http;
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.DependencyInjection;

namespace EmployeeManagement
{
    public class Startup
    {
        private IConfiguration _config;

        public Startup(IConfiguration config)
        {
            _config = config;
        }
        // This method gets called by the runtime. Use this method to add services to the container.
        // For more information on how to configure your application, visit https://go.microsoft.com/fwlink/?LinkID=398940
        public void ConfigureServices(IServiceCollection services)
        {
        }

        // This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
        public void Configure(IApplicationBuilder app, IHostingEnvironment env)
        {
            //Below code will show proper issue to be resolve by developer in order to work app properly
            if (env.IsDevelopment())
            {
                app.UseDeveloperExceptionPage();
            }


            /*
             //To serve default files(names should be one mention, index.htm,index.html,default.htm,default.html) 
             //UseDefaultFiles() should be first declared before UseStaticFiles()
             app.UseDefaultFiles();
             app.UseStaticFiles();
             */

            /*
              //To serve desired html files
            DefaultFilesOptions defaultFilesOptions = new DefaultFilesOptions();
            defaultFilesOptions.DefaultFileNames.Clear();
            defaultFilesOptions.DefaultFileNames.Add("foobar.html");

            //UseDefaultFiles() should be first declared before UseStaticFiles()
            app.UseDefaultFiles(defaultFilesOptions);
            app.UseStaticFiles();
             */

            app.Run(async (context) =>
            {
                throw new Exception("This is an error");
                await context.Response.WriteAsync("Hello World");
            });
            //Below one statement is enough to display default html files to the client
            //It will  do work of app.UseDefaultFiles(),app.UseStaticFiles() together
            app.UseFileServer();


        }
    }
}
